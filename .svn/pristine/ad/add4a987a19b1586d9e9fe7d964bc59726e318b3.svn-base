webpackJsonp([10],{

/***/ 701:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InboxPageModule", function() { return InboxPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__inbox__ = __webpack_require__(717);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(95);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var InboxPageModule = (function () {
    function InboxPageModule() {
    }
    return InboxPageModule;
}());
InboxPageModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        declarations: [
            __WEBPACK_IMPORTED_MODULE_2__inbox__["a" /* InboxPage */],
        ],
        imports: [
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__inbox__["a" /* InboxPage */]),
            __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["b" /* TranslateModule */],
        ],
    })
], InboxPageModule);

//# sourceMappingURL=inbox.module.js.map

/***/ }),

/***/ 717:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InboxPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_storage__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_utils_utils__ = __webpack_require__(316);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_http_http__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_sqlite__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_device__ = __webpack_require__(96);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__ = __webpack_require__(95);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_push___ = __webpack_require__(166);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











/**
 * Generated class for the InboxPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var InboxPage = (function () {
    function InboxPage(navCtrl, navParams, storage, utils, http, sqlite, push, loadingCtrl, menuCtrl, device, platform, translate, alertCtrl) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.storage = storage;
        this.utils = utils;
        this.http = http;
        this.sqlite = sqlite;
        this.push = push;
        this.loadingCtrl = loadingCtrl;
        this.menuCtrl = menuCtrl;
        this.device = device;
        this.platform = platform;
        this.translate = translate;
        this.alertCtrl = alertCtrl;
        this.movies = [];
        this.crearBD = false;
        this.mostarTabla = false;
        this.flagLoadInbox = 2;
        this.urlInbox = "auth/loadInbox/";
        this.passphrase = "323W0RKS";
        this.otp = false;
        this.bv = false;
        this.psh = false;
        this.tk = false;
        this.qr = false;
        // Metodo que escucha el llamado de las notificaciones push
        platform.ready().then(function () {
            _this.notificacionPush();
        });
        // Obtencion de la longitud y la latitud de la persona
        this.storage.get('latitud').then(function (lat) {
            _this.storage.get('longitud').then(function (lon) {
                if (lat != null && lon != null) {
                    _this.latitud = lat;
                    _this.longitud = lon;
                }
            });
        });
        this.storage.get('FROM_LOGIN').then(function (val) {
            if (val) {
                _this.storage.set('FROM_LOGIN', false);
            }
            else {
                //this.loadInbox();
            }
        });
        //Metodo para cuando se le de back al celular cierre la app y lo envie al login
        this.utils.outApp("LoginPage");
        this.storage.get('AUTHTYPE').then(function (val) {
            _this.page = val;
            if (val != null) {
                _this.mostarTabla = true;
                if (val == "OT") {
                    //this.page = 1;
                    _this.page = "OT";
                    _this.authType = _this.utils.valorProperty("Afiliacion.otp");
                    //nueva logica
                    _this.otp = true;
                    _this.bv = false;
                    _this.psh = false;
                    _this.tk = false;
                    _this.qr = false;
                }
                else if (val == "QR") {
                    //this.page = 3;
                    _this.page = "QR";
                    _this.authType = "QR";
                    //nueva logica
                    _this.otp = false;
                    _this.bv = false;
                    _this.psh = false;
                    _this.tk = false;
                    _this.qr = true;
                }
                else if (val == "TK") {
                    //this.page = 4;
                    _this.page = "TK";
                    _this.authType = "TK";
                    //nueva logica
                    _this.otp = false;
                    _this.bv = false;
                    _this.psh = false;
                    _this.tk = true;
                    _this.qr = false;
                }
                else if (val == "PN") {
                    _this.page = "PN";
                    _this.authType = "PUSH";
                    //nueva logica
                    _this.otp = false;
                    _this.bv = false;
                    _this.psh = true;
                    _this.tk = false;
                    _this.qr = false;
                }
                else if (val == "BV") {
                    _this.page = "BV";
                    _this.authType = _this.utils.valorProperty("validacionVerificacion");
                    //nueva logica
                    _this.otp = false;
                    _this.bv = true;
                    _this.psh = false;
                    _this.tk = false;
                    _this.qr = false;
                }
                else {
                    _this.authType = "";
                    _this.utils.presentAlert("mensajeinbox");
                }
            }
        });
        //Obtención del userName - Ya viene encriptado
        this.storage.get('userName').then(function (val) {
            if (val != null) {
                //this.userName = val;
                //alert("username antes: "+val);
                var aesUtil = new AesUtil(128, 1000);
                // Se encripta el usuario con el nuevo encript que paso hernan 2019
                _this.userName = aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, val);
                //alert("username despues: "+this.userName);
            }
        });
        //Obtención del password - Ya viene encriptado
        this.storage.get('password').then(function (val) {
            if (val != null) {
                _this.passw = val;
            }
        });
        //Obtención de los datos del equipo
        this.storage.get('infoDevice').then(function (val) {
            if (val != null) {
                _this.infoDevice = val;
            }
        });
        //Obtención del DeliveryCh del login
        this.storage.get('DELIVERYCH').then(function (val) {
            if (val != null) {
                _this.deliveryCh = val;
            }
        });
        //Obtención del ResponseCh del login
        this.storage.get('RESPONSECH').then(function (val) {
            if (val != null) {
                _this.responseCh = val;
            }
        });
        //Obtención del messageId - PROVIENE DEL LOGIN
        this.storage.get('MESSAGEID').then(function (val) {
            if (val != null) {
                _this.messageId = val;
                //alert("MESSAGEID inbox1: "+this.messageId);
            }
        });
        /*Prueba para traer el ususrio logueado por finger
        this.storage.get('user').then((val) => {
         if(val != null){
           alert("usuario finger: "+val);
         }
       });*/
    }
    InboxPage.prototype.ionViewDidLoad = function () {
        // Inicia y valida el tiempo de sesion "esta configurado para 1 minuto"
        // this.utils.initTimeOut();
    };
    InboxPage.prototype.ionViewCanEnter = function () {
        var _this = this;
        this.storage.get('AUTHTYPE').then(function (val) {
            _this.page = val;
            if (val != null) {
                _this.mostarTabla = true;
                if (val == "OT") {
                    //this.page = 1;
                    _this.page = "OT";
                    _this.authType = _this.utils.valorProperty("Afiliacion.otp");
                    _this.otp = true;
                    _this.bv = false;
                    _this.psh = false;
                    _this.tk = false;
                    _this.qr = false;
                }
                else if (val == "QR") {
                    //this.page = 3;
                    _this.page = "QR";
                    _this.authType = "QR";
                    _this.otp = false;
                    _this.bv = false;
                    _this.psh = false;
                    _this.tk = false;
                    _this.qr = true;
                }
                else if (val == "TK") {
                    //this.page = 4;
                    _this.page = "TK";
                    _this.authType = "TK";
                    _this.otp = false;
                    _this.bv = false;
                    _this.psh = false;
                    _this.tk = true;
                    _this.qr = false;
                }
                else if (val == "PN") {
                    _this.page = "PN";
                    _this.authType = "PUSH";
                    _this.otp = false;
                    _this.bv = false;
                    _this.psh = true;
                    _this.tk = false;
                    _this.qr = false;
                }
                else if (val == "BV") {
                    _this.page = "BV";
                    _this.authType = _this.utils.valorProperty("validacionVerificacion");
                    _this.otp = false;
                    _this.bv = true;
                    _this.psh = false;
                    _this.tk = false;
                    _this.qr = false;
                }
                else {
                    _this.authType = "";
                }
            }
        });
    };
    InboxPage.prototype.home = function () {
        if (this.page == "OT") {
            //alert("HomePage");
            //this.navCtrl.push('TabsPage', { view:  1 });
            this.otp = true;
            this.bv = false;
            this.psh = false;
            this.tk = false;
            this.qr = false;
            this.navCtrl.push('HomePage');
        }
        else if (this.page == "QR") {
            //alert("QrPage");
            //this.navCtrl.push('TabsPage', { view:  3 });
            this.otp = false;
            this.bv = false;
            this.psh = false;
            this.tk = false;
            this.qr = true;
            this.navCtrl.push('QrPage');
        }
        else if (this.page == "TK") {
            //alert("TkPage");
            //this.navCtrl.push('TabsPage', { view:  4 });
            this.otp = false;
            this.bv = false;
            this.psh = false;
            this.tk = true;
            this.qr = false;
            this.navCtrl.push('TkPage');
        }
        else if (this.page == "PN") {
            //alert("TkPage");
            //this.navCtrl.push('TabsPage', { view:  4 });
            this.otp = false;
            this.bv = false;
            this.psh = true;
            this.tk = false;
            this.qr = false;
            this.navCtrl.push('PushPage', { accesoAuthType: 1 });
        }
        else if (this.page == "BV") {
            //alert("TkPage");
            //this.navCtrl.push('TabsPage', { view:  4 });
            this.otp = false;
            this.bv = true;
            this.psh = false;
            this.tk = false;
            this.qr = false;
            this.navCtrl.push('ValidacionPositivaPage');
        }
        else {
            this.utils.presentAlert("mensajeinbox");
        }
    };
    //metodo para recargar LOAD INBOX
    InboxPage.prototype.loadInbox = function () {
        //alert("LOAD inbox: "+this.messageId);
        var _this = this;
        var aesUtil = new AesUtil(128, 1000);
        this.storage.get('MESSAGEID').then(function (val) {
            if (val != null) {
                _this.messageId = val;
                var newModel = _this.utils.changePuntoComa(_this.device.model);
                var data = '{"iddev":"' + _this.device.uuid + '",' +
                    '"model":"' + newModel + '",' +
                    '"cordova":"' + _this.device.cordova + '",' +
                    '"plataform":"' + _this.device.platform + '",' +
                    '"version":"' + _this.device.version + '",' +
                    '"manufacturer":"' + _this.device.manufacturer + '",' +
                    '"serial":"' + _this.device.serial + '",' +
                    '"isVirtual":"' + _this.device.isVirtual + '"}';
                var deviceDATA = aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, data);
                //Datos del dispositivo
                _this.jsonDataDevice =
                    {
                        "userName": _this.userName,
                        "messageId": _this.messageId,
                        "keyMessage": "key1234",
                        "device": {
                            "iddev": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, _this.device.uuid)
                        },
                        "authType": "AUTH",
                        "reasonCalled": "auth_inbox",
                        "scoreRiskCustomer": "0",
                        "geoRefLatitude": _this.latitud,
                        "geoRefLongitude": _this.longitud,
                        "deviceTrustId": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, _this.device.uuid),
                        "deviceTrustData": deviceDATA
                    };
                _this.http.callServer(_this.jsonDataDevice, _this.urlInbox).then(function (res) {
                    _this.message = JSON.stringify(res);
                    _this.storage.set('MESSAGEID', res.messageId);
                    if (res.messageId != null || res.messageId != "") {
                        _this.storage.set('MESSAGEID', res.messageId);
                        _this.messageId = res.messageId;
                    }
                    //alert("load inbox: "+this.message);
                    //alert("nuevo message id load inbox-->" + res.messageId);
                    _this.storage.set('MESSAGEID', res.messageId);
                    //alert("nuevo INBOX "+this.message);
                    // alert("auth inbox "+this.message);
                    _this.storage.set('AUTHDATA', res.authData);
                    _this.storage.set('DELIVERYCH', res.deliveryCh);
                    _this.storage.set('RESPONSECH', res.responseCh);
                    _this.storage.set('REQUESTID', res.requestId);
                    _this.storage.set('AUTHTYPE', res.authType); // <-- nuevo
                    _this.authType = res.authType;
                    try {
                        _this.utils.errorControl(res.message.code);
                        _this.mostarTabla = true;
                        if (res.authType == "OT") {
                            //this.page = 1;
                            _this.page = "OT";
                            _this.authType = _this.utils.valorProperty("Afiliacion.otp");
                            _this.otp = true;
                            _this.bv = false;
                            _this.psh = false;
                            _this.tk = false;
                            _this.qr = false;
                        }
                        else if (res.authType == "QR") {
                            //this.page = 3;
                            _this.page = "QR";
                            _this.authType = "QR";
                            _this.otp = false;
                            _this.bv = false;
                            _this.psh = false;
                            _this.tk = false;
                            _this.qr = true;
                        }
                        else if (res.authType == "TK") {
                            //this.page = 4;
                            _this.page = "TK";
                            _this.authType = "TK";
                            _this.otp = false;
                            _this.bv = false;
                            _this.psh = false;
                            _this.tk = true;
                            _this.qr = false;
                        }
                        else if (res.authType == "PN") {
                            _this.page = "PN";
                            _this.authType = "PN";
                            _this.otp = false;
                            _this.bv = false;
                            _this.psh = true;
                            _this.tk = false;
                            _this.qr = false;
                        }
                        else if (res.authType == "BV") {
                            _this.page = "BV";
                            _this.authType = _this.utils.valorProperty("validacionVerificacion");
                            _this.otp = false;
                            _this.bv = true;
                            _this.psh = false;
                            _this.tk = false;
                            _this.qr = false;
                        }
                        else {
                            _this.authType = "";
                            _this.utils.presentAlert("mensajeinbox");
                        }
                    }
                    catch (error) {
                        _this.utils.presentAlert("mensajeErrorControlado" + error);
                    }
                }, function (error) {
                    if (error) {
                        _this.utils.presentAlert("mensajePeticion" + error);
                        _this.storage.clear();
                        _this.utils.clearVariableSesion();
                        _this.navCtrl.setRoot("LoginPage");
                    }
                });
            }
        });
    };
    //Metodo para refrescar el inbox
    InboxPage.prototype.refreshInbox = function () {
        this.presentLoading();
        this.loadInbox();
    };
    InboxPage.prototype.presentLoading = function () {
        var msj = this.utils.getMessageLanguage("inbox.loanding");
        var loading = this.loadingCtrl.create({
            content: msj
        });
        loading.present();
        setTimeout(function () {
            loading.dismiss();
        }, 2000);
    };
    InboxPage.prototype.menu = function () {
        //alert("MenuToggle");
        this.menuCtrl.toggle();
    };
    InboxPage.prototype.validacionPos = function () {
        this.navCtrl.push("ValidacionPositivaPage");
    };
    InboxPage.prototype.logoutApp = function () {
        var _this = this;
        //Obtención del messageId - PROVIENE DEL LOGIN
        this.storage.get('nameUser').then(function (val) {
            if (val != null) {
                //alert("logout 2");
                var aesUtil = new AesUtil(128, 1000);
                var newModel = _this.utils.changePuntoComa(_this.device.model);
                _this.data = '{"iddev":"' + _this.device.uuid + '",' +
                    '"model":"' + newModel + '",' +
                    '"cordova":"' + _this.device.cordova + '",' +
                    '"plataform":"' + _this.device.platform + '",' +
                    '"version":"' + _this.device.version + '",' +
                    '"manufacturer":"' + _this.device.manufacturer + '",' +
                    '"serial":"' + _this.device.serial + '",' +
                    '"isVirtual":"' + _this.device.isVirtual + '"}';
                //this.encripData = this.utils.encodePass(this.data);
                _this.encripData = aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.passphrase, _this.data);
                // var iddevEnc: string = this.utils.encodePass(this.device.uuid); ASI ESTABA ANTERIORMENTE  21 MARZO 2019
                var iddevEnc = aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.passphrase, _this.device.uuid);
                var data = '{"iddev":"' + _this.device.uuid + '",' +
                    '"model":"' + newModel + '",' +
                    '"cordova":"' + _this.device.cordova + '",' +
                    '"plataform":"' + _this.device.platform + '",' +
                    '"version":"' + _this.device.version + '",' +
                    '"manufacturer":"' + _this.device.manufacturer + '",' +
                    '"serial":"' + _this.device.serial + '",' +
                    '"isVirtual":"' + _this.device.isVirtual + '"}';
                var deviceDATA = aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, data);
                //Datos del dispositivo
                _this.jsonDataDevice =
                    {
                        "userName": val,
                        "company": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.passphrase, "1"),
                        "appAuthType": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.passphrase, "AUTH"),
                        "appProcess": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.passphrase, "I"),
                        "device": {
                            "data": _this.encripData,
                            "iddev": iddevEnc
                        },
                        "authType": "AUTH",
                        "reasonCalled": "auth_logout",
                        "scoreRiskCustomer": "0",
                        "geoRefLatitude": _this.latitud,
                        "geoRefLongitude": _this.longitud,
                        "deviceTrustId": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, _this.device.uuid),
                        "deviceTrustData": deviceDATA
                    };
                _this.jsonDataDevice2 =
                    {
                        "userName": val,
                        "device": {
                            "iddev": _this.device.uuid,
                            "model": _this.device.model,
                            "cordova": _this.device.cordova,
                            "plataform": _this.device.platform,
                            "version": _this.device.version,
                            "manufacturer": _this.device.manufacturer,
                            "serial": _this.device.serial,
                            "isVirtual": _this.device.isVirtual
                        }
                    };
                var urlLogin = "security/loginOut/";
                _this.http.callServer(_this.jsonDataDevice, urlLogin).then(function (res) {
                    //alert(res);
                    _this.message = JSON.stringify(res);
                    //alert("Respuesta Logout: "+this.message);
                    if (res.message.code == '0000' || res.message.description == 'STATUS OK') {
                        _this.utils.clearVariableSesion();
                        _this.utils.logout();
                    }
                }, function (error) {
                    _this.utils.presentAlert("mensajeConexion");
                });
            }
        });
    };
    //Metodo de confirmación para logout de la app
    InboxPage.prototype.presentConfirm = function () {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: this.utils.getMessageLanguage("logout.message"),
            message: this.utils.getMessageLanguage("logout.titulo"),
            buttons: [
                {
                    text: this.utils.getMessageLanguage("confirm.btnCancelar"),
                    handler: function (data) {
                        if (_this.utils.getMessageLanguage("confirm.btnCancelar")) {
                            console.log("Salida Cancelada");
                        }
                    }
                },
                {
                    text: this.utils.getMessageLanguage("confirm.btnAceptar"),
                    handler: function (data) {
                        if (_this.utils.getMessageLanguage("confirm.btnAceptar")) {
                            _this.utils.presentLoading();
                            _this.logoutApp();
                        }
                    }
                }
            ]
        });
        alert.present();
    };
    InboxPage.prototype.pantallaPush = function () {
        this.navCtrl.push("PushPage");
    };
    // ***************** CONFIGURACION DE NOTIFICACIONES PUSH ***********************
    InboxPage.prototype.notificacionPush = function () {
        var _this = this;
        var titulo;
        var authVal;
        var authCod;
        var mensaje;
        this.push.hasPermission()
            .then(function (res) {
            if (res.isEnabled) {
                //alert('We have permission to send push notifications'); 
            }
            else {
                //alert('We do not have permission to send push notifications');
            }
        });
        // inicializamos la configuración para android y ios
        var options = {
            android: {
                senderID: '663636742494',
                //foreground: 'true',
                forceShow: true,
                sound: 'true'
            },
            ios: {
                alert: true,
                badge: true,
                sound: 'false'
            },
            windows: {}
        };
        var pushObject = this.push.init(options);
        pushObject.on('notification').subscribe(function (notification) {
            titulo = notification.title;
            var notificacion = notification.message;
            var temp1;
            var temp2;
            authVal = notificacion.slice(0, 2);
            temp1 = notificacion.split(" ");
            temp2 = temp1[0].split();
            authCod = temp1[0].slice(2);
            var zz = notificacion.split(":");
            mensaje = zz[1];
            _this.navCtrl.push("PushPage", { title: titulo, codOtp: authCod, msg: mensaje });
        });
        pushObject.on('registration').subscribe(function (registration) {
            var registrationId = registration.registrationId;
            var tk = registrationId;
        });
        pushObject.on('error').subscribe(function (error) {
            console.error('Error with Push plugin', error);
        });
    };
    // metodo para ir al inbox
    InboxPage.prototype.inbox = function () {
        this.navCtrl.push("InboxPage");
    };
    InboxPage.prototype.devolverse = function () {
        this.navCtrl.push("BandejaMenuPage");
    };
    return InboxPage;
}());
InboxPage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-inbox',template:/*ion-inline-start:"D:\PYT\development\work_HB_2019\auth_2019\authApp\src\pages\inbox\inbox.html"*/'<ion-header>\n\n  <!--<ion-navbar hideBackButton>\n    <button ion-button menu-toggle (click)="menu()">\n        <ion-icon name="menu"></ion-icon>\n    </button>     \n    <div id="logo"></div>\n    <div id="logOut" (click)="presentConfirm()"></div>\n  </ion-navbar>-->\n\n</ion-header>\n\n<ion-content class="todo">\n\n  <!--<ion-label class="ttlProductOverView">{{ \'Afiliacion.btn2\' | translate }}</ion-label>\n  <br>\n  <table>\n    <tr>\n      <th>{{ \'Afiliacion.request\' | translate }}</th>\n      <th><button style="background: white;" (click)="refreshInbox()"><ion-icon ios="ios-refresh" md="md-refresh"></ion-icon></button></th>\n    </tr>\n    <tr>\n      <td>{{ authType }}</td>\n      <td><button ion-button outline (click)="home()">{{ \'Afiliacion.btnView\' | translate }}</button></td>\n    </tr>\n  </table>-->\n\n  <ion-img style="width: 280px;\n                  height: 63px; \n                  left: 15%;\n                  top: 40px;    \n                  position: absolute;\n                  margin-left: auto;\n                  margin:10px auto;\n                  display:block; \n                  background: #F0F2F4;"  src="assets/img/new/LOGO.svg">\n  </ion-img>\n\n  <br><br><br><br><br><br><br><br>   \n\n  <ion-card>\n    <ion-card-content style="height: 430px;">\n\n      <table>\n        <tr style="height: 60px;">\n          <td>\n            <span class="devolver" (click)="devolverse()">\n              <ion-img src="assets/img/new/BANDEJA_DEVOLVERSE.svg" style="min-width: 31px; min-height: 26px;"></ion-img>\n            </span>\n            <span class="otp" (click)="refreshInbox()">\n              <ion-img src="assets/img/new/BANDEJA_REFRESCAR.svg" style="min-height: 36px;"></ion-img>\n            </span>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class="bandeja">\n              {{ \'Tabs.inbox\' | translate }}\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class="data">\n              {{ \'inbox.tareas\' | translate }}\n            </div>\n          </td>\n        </tr>\n      </table>\n  \n      <!--Inicio OTP-->\n      <ion-card style="width: 103%; border-radius: 7px;" >\n        <ion-card-content style="padding: 0px 13px; font-size: 1.5rem; line-height: 1.5;">\n          <table style="width: 100%;">\n            <tr>\n              <td>\n                <span>\n                  <ion-img src="assets/img/new/BANDEJA_OTP.svg" style="margin-top: 5px;"></ion-img>\n                  <span style="font-size: 18px; margin-left: 5px;">\n                    <!--{{ authType }}-->\n                    OTP\n                  </span>\n                </span>\n              </td>\n              <td>\n                <div\n                  style="width: 8px; height: 8px; background: url(../assets/img/new/BANDEJA_NOTIFICACION_SPLASH.svg) 0 0 no-repeat;">\n                </div>\n              </td>\n              <td *ngIf="otp">\n                <button ion-button outline style="float: right;" (click)="home()">{{ \'Afiliacion.btnView\' | translate }}</button>\n              </td>\n            </tr>\n          </table>\n        </ion-card-content>\n      </ion-card>\n\n      <!--Inicio verificacion de identidad-->\n      <ion-card style="width: 103%; border-radius: 7px;">\n        <ion-card-content style="padding: 0px 13px; font-size: 1.5rem; line-height: 1.5;">\n          <table style="width: 100%;">\n            <tr>\n              <td>\n                <span>\n                  <ion-img src="assets/img/new/BANDEJA_VERIFICACION_ID.svg" style="margin-top: 5px;"></ion-img>\n                  <span style="font-size: 18px; margin-left: 5px;">\n                    <!--{{ authType }}-->\n                    BV\n                  </span>\n                </span>\n              </td>\n              <td>\n                <div\n                  style="width: 8px; height: 8px; background: url(../assets/img/new/BANDEJA_NOTIFICACION_SPLASH.svg) 0 0 no-repeat;">\n                </div>\n              </td>\n              <td *ngIf="bv">\n                <button ion-button outline (click)="home()" style="float: right;">{{ \'Afiliacion.btnView\' | translate }}</button>\n              </td>\n            </tr>\n          </table>\n        </ion-card-content>\n      </ion-card>\n\n      <!--Inicio push-->\n      <ion-card style="width: 103%; border-radius: 7px;">\n        <ion-card-content style="padding: 0px 13px; font-size: 1.5rem; line-height: 1.5;">\n          <table style="width: 100%;">\n            <tr>\n              <td>\n                <span>\n                  <ion-img src="assets/img/new/MENSAJE_NOTIFICACION_TRANSACCION.svg" style="margin-top: 5px;"></ion-img>\n                  <span style="font-size: 18px; margin-left: 5px;">\n                    <!--{{ authType }}-->\n                    PUSH\n                  </span>\n                </span>\n              </td>\n              <td>\n                <div\n                  style="width: 8px; height: 8px; background: url(../assets/img/new/BANDEJA_NOTIFICACION_SPLASH.svg) 0 0 no-repeat;">\n                </div>\n              </td>\n              <td *ngIf="psh">\n                <button ion-button outline (click)="home()" style="float: right;">{{ \'Afiliacion.btnView\' | translate }}</button>\n              </td>\n            </tr>\n          </table>\n        </ion-card-content>\n      </ion-card>\n\n      <!--Inicio TK-->\n      <ion-card style="width: 103%; border-radius: 7px;">\n        <ion-card-content style="padding: 0px 13px; font-size: 1.5rem; line-height: 1.5;">\n          <table style="width: 100%;">\n            <tr>\n              <td>\n                <span>\n                  <ion-img src="assets/img/new/BANDEJA_TK.svg" style="margin-top: 5px;"></ion-img>\n                  <span style="font-size: 18px; margin-left: 5px;">\n                    <!--{{ authType }}-->\n                    TK\n                  </span>\n                </span>\n              </td>\n              <td>\n                <div\n                  style="width: 8px; height: 8px; background: url(../assets/img/new/BANDEJA_NOTIFICACION_SPLASH.svg) 0 0 no-repeat;">\n                </div>\n              </td>\n              <td *ngIf="tk">\n                <button ion-button outline (click)="home()" style="float: right;">{{ \'Afiliacion.btnView\' | translate }}</button>\n              </td>\n            </tr>\n          </table>\n        </ion-card-content>\n      </ion-card>\n\n      <!--Inicio QR-->\n      <ion-card style="width: 103%; border-radius: 7px;">\n        <ion-card-content style="padding: 0px 13px; font-size: 1.5rem; line-height: 1.5;">\n          <table style="width: 100%;">\n            <tr>\n              <td>\n                <span>\n                  <ion-img src="assets/img/new/BANDEJA_QR.svg" style="margin-top: 5px;"></ion-img>\n                  <span style="font-size: 18px; margin-left: 5px;">\n                    <!--{{ authType }}-->\n                    QR\n                  </span>\n                </span>\n              </td>\n              <td>\n                <div\n                  style="width: 8px; height: 8px; background: url(../assets/img/new/BANDEJA_NOTIFICACION_SPLASH.svg) 0 0 no-repeat;">\n                </div>\n              </td>\n              <td *ngIf="qr">\n                <button ion-button outline (click)="home()" style="float: right;">{{ \'Afiliacion.btnView\' | translate }}</button>\n              </td>\n            </tr>\n          </table>\n        </ion-card-content>\n      </ion-card>\n  \n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\PYT\development\work_HB_2019\auth_2019\authApp\src\pages\inbox\inbox.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */], __WEBPACK_IMPORTED_MODULE_3__providers_utils_utils__["a" /* UtilsProvider */], __WEBPACK_IMPORTED_MODULE_4__providers_http_http__["a" /* HttpProvider */], __WEBPACK_IMPORTED_MODULE_5__ionic_native_sqlite__["a" /* SQLite */], __WEBPACK_IMPORTED_MODULE_8__ionic_native_push___["a" /* Push */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["g" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* MenuController */], __WEBPACK_IMPORTED_MODULE_6__ionic_native_device__["a" /* Device */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Platform */], __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */]])
], InboxPage);

//# sourceMappingURL=inbox.js.map

/***/ })

});
//# sourceMappingURL=10.js.map