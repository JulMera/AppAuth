webpackJsonp([7],{

/***/ 704:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PushPageModule", function() { return PushPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__push__ = __webpack_require__(720);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(95);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var PushPageModule = (function () {
    function PushPageModule() {
    }
    return PushPageModule;
}());
PushPageModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        declarations: [
            __WEBPACK_IMPORTED_MODULE_2__push__["a" /* PushPage */],
        ],
        imports: [
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__push__["a" /* PushPage */]),
            __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["b" /* TranslateModule */]
        ],
    })
], PushPageModule);

//# sourceMappingURL=push.module.js.map

/***/ }),

/***/ 720:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PushPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_push___ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_fingerprint_aio__ = __webpack_require__(319);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_storage__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_utils_utils__ = __webpack_require__(316);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_device__ = __webpack_require__(96);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_http_http__ = __webpack_require__(165);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the PushPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PushPage = (function () {
    function PushPage(navCtrl, navParams, platform, push, faio, http, alertCtrl, storage, menuCtrl, utils, device, loadingCtrl) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.push = push;
        this.faio = faio;
        this.http = http;
        this.alertCtrl = alertCtrl;
        this.storage = storage;
        this.menuCtrl = menuCtrl;
        this.utils = utils;
        this.device = device;
        this.loadingCtrl = loadingCtrl;
        this.tk = "token id";
        this.huella = false;
        this.face_ID = false;
        this.contentMsj = false;
        this.fingerFace = false;
        this.aprobo = false;
        this.rechazo = false;
        this.banderafingerFace = 0;
        this.banderaAlert = 0;
        this.mostrarDevolver = true;
        this.mostrarDevolver = true;
        this.titulo = this.navParams.get("title");
        this.authCod = this.navParams.get("codOtp");
        ;
        this.mensaje = this.navParams.get("msg");
        this.titulo = "Push message revered";
        this.mensaje = "Transaccion para ser aprobada, solicitada por el ebanking";
        // Obtencion de la longitud y la latitud de la persona
        this.storage.get('latitud').then(function (lat) {
            _this.storage.get('longitud').then(function (lon) {
                if (lat != null && lon != null) {
                    _this.latitud = lat;
                    _this.longitud = lon;
                }
            });
        });
        if (this.navParams.get("accesoAuthType") == 1) {
            // Obtenci√≥n del Mensaje PUSH que se envia desde el inbox
            this.storage.get('AUTHDATA').then(function (val) {
                if (val != null) {
                    //alert("PUSH: "+val); 
                    var titulo = _this.utils.valorProperty("pushMensaje");
                    var notificacion = val;
                    var temp1;
                    var temp2;
                    var authVal = notificacion.slice(0, 2);
                    //alert("authVal: "+authVal);
                    temp1 = notificacion.split(" ");
                    temp2 = temp1[0].split();
                    var authCod = temp1[0].slice(2);
                    //alert("temp1: "+temp1);
                    var zz = notificacion.split(":");
                    var mensaje = zz[1];
                    //alert("mensaje: "+mensaje);
                    _this.titulo = _this.utils.valorProperty("pushMensaje");
                    _this.mensaje = mensaje;
                    _this.loginFingerPrint(authCod);
                }
            });
        }
        this.storage.get('MESSAGEID').then(function (val) {
            if (val != null) {
                _this.messageId = val;
            }
        });
        this.storage.get('userName').then(function (val) {
            if (val != null) {
                // this.userName = val;
                var aesUtil = new AesUtil(128, 1000);
                // Se encripta el usuario con el nuevo encript que paso hernan 2019
                _this.userName = aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, val);
            }
        });
        platform.ready().then(function () {
            var authCod = _this.navParams.get("codOtp");
            _this.hoy = new Date();
            _this.fecha = _this.hoy.getDate() + "/" + (_this.hoy.getMonth() + 1) + "/" + _this.hoy.getFullYear();
            _this.hora = _this.hoy.getHours() + " Hr: " + _this.hoy.getMinutes() + " Min: " + _this.hoy.getSeconds() + " Seg";
            _this.faio.isAvailable().then(function (result) {
                if (result === "finger") {
                    _this.banderafingerFace = 1;
                    _this.banderaAlert = 0;
                    // alert("huella");
                }
                else if (result === "face") {
                    _this.banderafingerFace = 1;
                    _this.banderaAlert = 0;
                    //alert("rostro");
                }
            }).catch(function () {
                //alert("alert");
                _this.banderaAlert = 1;
                _this.banderafingerFace = 0;
            });
            //alert("valor authOTP: " + authCod);
            if (authCod != null && authCod != undefined) {
                _this.obtencionNotificacion();
            }
            else {
                _this.notificacionPush();
            }
        });
    }
    PushPage.prototype.loginFingerPrint = function (otp) {
        var _this = this;
        //this.fingerFace = true;
        //alert("entro metodo loginFinger");
        // Variable tipo estatus de la notificacion push si se cancela o no
        var tipoStatus;
        //alert("entro");
        this.fingerprintOptions = {
            clientId: 'touchLogin',
            clientSecret: 'password',
        };
        //this.platform.
        this.faio.isAvailable().then(function (result) {
            //alert("resultado: "+result);
            if (result === "finger" || result === "face") {
                _this.faio.show({
                    clientId: 'touchLogin',
                    clientSecret: 'password',
                    // disableBackup: true, //Only for Android(optional)
                    localizedFallbackTitle: 'Use Pin',
                    localizedReason: 'Please Authenticate' //Only for iOS
                })
                    .then(function (result) {
                    //alert("Result: "+ JSON.stringify(result));
                    //Verificamos que hay match  
                    if (result == "Success") {
                        //document.getElementById("fingerFace").style.display = "none";
                        //document.getElementById("aprobo").style.display = "block";
                        //document.getElementById("rechazo").style.display = "none";
                        //document.getElementById("contentMsj").style.display = "block";
                        /*this.contentMsj = true;
                        this.fingerFace = false;
                        this.aprobo = true;
                        this.rechazo = false;*/
                        tipoStatus = "A";
                        _this.envioPush(otp, tipoStatus);
                    }
                    if (result.withFingerprint || result.Success) {
                        //document.getElementById("aprobo").style.display = "block";
                        //document.getElementById("rechazo").style.display = "none";
                        //document.getElementById("fingerFace").style.display = "none";
                        //document.getElementById("contentMsj").style.display = "block";
                        /*this.contentMsj = true;
                        this.fingerFace = false;
                        this.aprobo = true;
                        this.rechazo = false;*/
                        tipoStatus = "A";
                        _this.envioPush(otp, tipoStatus);
                    }
                    else {
                        //Fingerprint/Face was not successfully verified
                        console.log("final de error: " + JSON.stringify(result));
                    }
                }).catch(function () {
                    //document.getElementById("aprobo").style.display = "none";
                    //document.getElementById("rechazo").style.display = "block";
                    //document.getElementById("fingerFace").style.display = "none";
                    //document.getElementById("contentMsj").style.display = "block";
                    tipoStatus = "C";
                    _this.envioPush(otp, tipoStatus);
                });
            }
        }).catch(function (error) {
            alert("Se presento un error: " + error);
        });
    };
    PushPage.prototype.presentNotification = function (otp) {
        var _this = this;
        // Variable tipo estatus de la notificacion push si se cancela o no
        var tipoStatus;
        var alert = this.alertCtrl.create({
            title: "Mensaje",
            message: "Alerta Notificaci√≥n",
            buttons: [
                {
                    text: "cancelar",
                    handler: function (data) {
                        if ("cancelar") {
                            tipoStatus = "C";
                            _this.envioPush(otp, tipoStatus);
                            console.log("cancelo");
                        }
                    }
                },
                {
                    text: "Aceptar",
                    handler: function (data) {
                        if ("Aceptar") {
                            tipoStatus = "A";
                            _this.envioPush(otp, tipoStatus);
                            console.log("acepto");
                        }
                    }
                }
            ]
        });
        alert.present();
    };
    PushPage.prototype.menu = function () {
        this.menuCtrl.toggle();
    };
    //Metodo de confirmaci√≥n para logout de la app
    PushPage.prototype.presentConfirm = function () {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: this.utils.getMessageLanguage("logout.message"),
            message: this.utils.getMessageLanguage("logout.titulo"),
            buttons: [
                {
                    text: this.utils.getMessageLanguage("confirm.btnCancelar"),
                    handler: function (data) {
                        if (_this.utils.getMessageLanguage("confirm.btnCancelar")) {
                            console.log("Salida Cancelada");
                        }
                    }
                },
                {
                    text: this.utils.getMessageLanguage("confirm.btnAceptar"),
                    handler: function (data) {
                        if (_this.utils.getMessageLanguage("confirm.btnAceptar")) {
                            _this.utils.presentLoading();
                            _this.logoutApp();
                        }
                    }
                }
            ]
        });
        alert.present();
    };
    // Metodo para salir de la app
    PushPage.prototype.logoutApp = function () {
        var _this = this;
        //Obtenci√≥n del messageId - PROVIENE DEL LOGIN
        this.storage.get('nameUser').then(function (val) {
            if (val != null) {
                //alert("logout 2");
                var aesUtil = new AesUtil(128, 1000);
                var newModel = _this.utils.changePuntoComa(_this.device.model);
                _this.data = '{"iddev":"' + _this.device.uuid + '",' +
                    '"model":"' + newModel + '",' +
                    '"cordova":"' + _this.device.cordova + '",' +
                    '"plataform":"' + _this.device.platform + '",' +
                    '"version":"' + _this.device.version + '",' +
                    '"manufacturer":"' + _this.device.manufacturer + '",' +
                    '"serial":"' + _this.device.serial + '",' +
                    '"isVirtual":"' + _this.device.isVirtual + '"}';
                //this.encripData = this.utils.encodePass(this.data);
                _this.encripData = aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, _this.data);
                // var iddevEnc: string = this.utils.encodePass(this.device.uuid); ASI ESTABA ANTERIORMENTE  21 MARZO 2019
                var iddevEnc = aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, _this.device.uuid);
                //Datos del dispositivo
                _this.jsonDataDevice =
                    {
                        "userName": val,
                        "company": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, "1"),
                        "appAuthType": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, "AUTH"),
                        "appProcess": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, "I"),
                        "device": {
                            "data": _this.encripData,
                            "iddev": iddevEnc
                        },
                        "authType": "AUTH",
                        "reasonCalled": "auth_logout",
                        "scoreRiskCustomer": "0",
                        "geoRefLatitude": _this.latitud,
                        "geoRefLongitude": _this.longitud,
                        "deviceTrustId": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, _this.device.uuid),
                        "deviceTrustData": _this.encripData
                    };
                _this.jsonDataDevice2 =
                    {
                        "userName": val,
                        "device": {
                            "iddev": _this.device.uuid,
                            "model": newModel,
                            "cordova": _this.device.cordova,
                            "plataform": _this.device.platform,
                            "version": _this.device.version,
                            "manufacturer": _this.device.manufacturer,
                            "serial": _this.device.serial,
                            "isVirtual": _this.device.isVirtual
                        }
                    };
                var urlLogin = "security/loginOut/";
                _this.http.callServer(_this.jsonDataDevice, urlLogin).then(function (res) {
                    //alert(res);
                    _this.message = JSON.stringify(res);
                    //alert("Respuesta Logout: "+this.message);
                    if (res.message.code == '0000' || res.message.description == 'STATUS OK') {
                        _this.utils.clearVariableSesion();
                        _this.utils.logout();
                    }
                }, function (error) {
                    _this.utils.presentAlert("mensajeConexion");
                });
            }
        });
    };
    // Envio de validacion de la notificacion Push
    PushPage.prototype.envioPush = function (otpPush, typeStatus) {
        var _this = this;
        //alert("OTP: "+otpPush+" Tipo: "+typeStatus);
        //document.getElementById("fingerFace").style.display = "none";
        this.contentMsj = true;
        this.fingerFace = false;
        this.huella = false;
        var aesUtil = new AesUtil(128, 1000);
        //alert("mesage id token1: "+this.messageId);
        this.storage.get('MESSAGEID').then(function (val) {
            //alert("message id token "+val);
            if (val != null) {
                _this.messageId = val;
                //alert("mesage id token2: "+this.messageId);
                var urlOtp = "auth/callAuth/";
                //Datos del dispositivo
                _this.jsonDataDevice =
                    {
                        "userName": _this.userName,
                        "authType": "PN",
                        "messageId": _this.messageId,
                        "data": otpPush,
                        "statusConfirm": typeStatus,
                        "device": {
                            "iddev": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, _this.device.uuid)
                        },
                        "reasonCalled": "auth_push",
                        "scoreRiskCustomer": "0",
                        "geoRefLatitude": _this.latitud,
                        "geoRefLongitude": _this.longitud,
                        "deviceTrustId": aesUtil.encrypt(_this.http.salt, _this.http.iv, _this.http.passphrase, _this.device.uuid),
                        "deviceTrustData": _this.encripData
                    };
                //alert("JSON a enviar \n"+ JSON.stringify(this.jsonDataDevice));
                _this.presentLoading();
                //alert("datos enviar OTP: "+JSON.stringify(this.jsonDataDevice));
                _this.http.callServer(_this.jsonDataDevice, urlOtp).then(function (res) {
                    //alert("LLAMADO TOKEN");
                    _this.message = JSON.stringify(res);
                    //alert("Respuesta PUSH: "+this.message);
                    _this.storage.set('MESSAGEID', res.messageId);
                    if (res.statusConfirm == "A") {
                        _this.contentMsj = true;
                        _this.fingerFace = false;
                        _this.aprobo = true;
                        _this.rechazo = false;
                    }
                    else if (res.statusConfirm == "C") {
                        _this.contentMsj = true;
                        _this.fingerFace = false;
                        _this.aprobo = false;
                        _this.rechazo = true;
                    }
                    try {
                        _this.utils.errorControl(res.message.code);
                        if (res.message.code == "0000") {
                            _this.storage.set('MESSAGEID', res.messageId);
                        }
                        else if (res.message.code == "9003") {
                        }
                        else {
                            _this.utils.presentAlert(res.message.description);
                        }
                    }
                    catch (error) {
                        _this.utils.presentAlert("mensajeErrorControlado" + error);
                    }
                }, function (error) {
                    if (error) {
                        _this.utils.presentAlert("mensajePeticion" + error);
                        //this.storage.clear();
                        //this.utils.clearVariableSesion();
                        //this.navCtrl.setRoot("LoginPage");
                    }
                });
            }
        });
    };
    // Este metodo obtiene los mensajes que han sido recibidos desde otras pantallas
    PushPage.prototype.obtencionNotificacion = function () {
        //alert("llego desde otra pagina");
        this.titulo = this.navParams.get("title");
        this.authCod = this.navParams.get("codOtp");
        ;
        this.mensaje = this.navParams.get("msg");
        //alert("BanderaFinger: "+this.banderafingerFace+"\nBanderaAlert: "+this.banderaAlert);
        if (this.banderafingerFace = 1) {
            //alert("Bandera finger");
            this.loginFingerPrint(this.authCod);
        }
        else if (this.banderaAlert = 1) {
            //alert("bandera alert");
            this.presentNotification(this.authCod);
        }
    };
    // Este metodo obtiene los mensajes que son recibidos desde esta pagina
    PushPage.prototype.notificacionPush = function () {
        //alert("llego desde esta pagina");
        var _this = this;
        // alert("1");
        // comprobamos los permisos
        this.push.hasPermission()
            .then(function (res) {
            //alert("Verificacion de permiso"+res)
            if (res.isEnabled) {
                //alert('We have permission to send push notifications'); 
            }
            else {
                //alert('We do not have permission to send push notifications');
            }
        });
        // inicializamos la configuraci√≥n para android y ios
        var options = {
            android: {
                senderID: '663636742494',
                //foreground: 'true',
                forceShow: true,
                sound: 'true'
            },
            ios: {
                alert: true,
                badge: true,
                sound: 'false'
            },
            windows: {}
        };
        var pushObject = this.push.init(options);
        pushObject.on('notification').subscribe(function (notification) {
            //alert(notification.wasTapped);
            if (notification.wasTapped) {
                //alert("Primer plano");
            }
            else {
                //alert("Segundo plano");
            }
            _this.titulo = notification.title;
            //alert(JSON.stringify(notification.message));
            var notificacion = notification.message;
            //this.mensaje = notification.message;
            //this.navCtrl.push("LoginPage");
            var temp1;
            var temp2;
            _this.authVal = notificacion.slice(0, 2);
            temp1 = notificacion.split(" ");
            temp2 = temp1[0].split();
            _this.authCod = temp1[0].slice(2);
            var zz = notificacion.split(":");
            _this.mensaje = zz[1];
            /* document.getElementById("fingerFace").style.display = "block";*/
            //this.huella = true;
            if (_this.banderafingerFace = 1) {
                //alert("Bandera finger");
                _this.loginFingerPrint(_this.authCod);
            }
            else if (_this.banderaAlert = 1) {
                //alert("bandera alert");
                _this.presentNotification(_this.authCod);
            }
            //this.getPicture(notification.message);
            //alert("notificacion: "+ JSON.stringify(notification));
            //aqu√≠ recibimos las notificaciones de firebase
            //localStorage.setItem('msj',notification.message);
            //this.mensaje = notification.message;
        });
        pushObject.on('registration').subscribe(function (registration) {
            var registrationId = registration.registrationId;
            //localStorage.setItem('token',registration.registrationId);
            //alert("token: "+ registrationId);
            _this.tk = registrationId;
            //alert("token que va: "+ registration.registrationId)
            //this.obtener(registration.registrationId)
            //registrationId lo debes guardar en mysql o similar para reutilizar
        });
        pushObject.on('error').subscribe(function (error) {
            console.error('Error with Push plugin', error);
        });
    };
    PushPage.prototype.presentLoading = function () {
        var msj = this.utils.getMessageLanguage("inbox.loanding");
        var loading = this.loadingCtrl.create({
            content: msj
        });
        loading.present();
        setTimeout(function () {
            loading.dismiss();
        }, 4000);
    };
    PushPage.prototype.devolverse = function () {
        this.navCtrl.push("BandejaMenuPage");
    };
    return PushPage;
}());
PushPage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-push',template:/*ion-inline-start:"D:\PYT\development\work_HB_2019\auth_2019\authApp\src\pages\push\push.html"*/'<ion-header>\n<!--\n  <ion-navbar hideBackButton>\n    <button ion-button menu-toggle (click)="menu()">\n      <ion-icon name="menu"></ion-icon>\n    </button> \n    <div id="logo"></div>\n    <div id="logOut" (click)="presentConfirm()"></div>\n  </ion-navbar>\n-->\n</ion-header>\n\n\n<ion-content class="todo">\n\n  <ion-img style="width: 280px;\n                height: 60px; \n                left: 15%;\n                top: 40px;    \n                position: absolute;\n                margin-left: auto;\n                margin:10px auto;\n                display:block; \n                background: #F0F2F4;" src="assets/img/new/LOGO.svg">\n                </ion-img>\n\n<br><br><br><br><br><br><br><br>\n\n  <div *ngIf="fingerFace">\n    <div (click)="loginFingerPrint()" *ngIf="huella">\n      <p style="margin: auto" style="text-align: center">Confirme con su huella digital</p><br>\n      <ion-img src="assets/img/logo.png" style="width: 100px; height: 100px;  margin:10px auto; display:block;"></ion-img>\n    </div>\n  \n    <div (click)="loginFingerPrint()" *ngIf="face_ID">\n      <p style="margin: auto" style="text-align: center">Inicie sesi√≥n con su reconocimiento facial</p><br>\n      <ion-img src="assets/img/faceId.jpg" style="width: 100px; height: 105px;  margin:10px auto; display:block;">\n      </ion-img>\n    </div>\n  </div>\n  \n<!--\n  <font size=5 style="color: #232f3e; margin-left: 19%;">{{ \'pushMensajeTitulo\' | translate }}</font><br><br>\n           \n  <div *ngIf="contentMsj">\n  \n    <ion-item>\n      <ion-label>\n        <ion-icon name="ios-warning-outline" style="margin-right: 3%;"></ion-icon> {{titulo}}\n      </ion-label>\n    </ion-item>\n  \n        <table width="100%">\n          <tr>\n            <td style="padding-left: 5%;"><ion-icon name="ios-mail-outline" style="margin-right: 5%;"></ion-icon></td>\n            <td style="border-bottom: solid 1px; padding-left: 10%; border-color: #dedede; padding-top: 3%; padding-bottom: 3%;">{{mensaje}}</td>\n          </tr>\n        </table>\n  \n    <ion-item>\n      <ion-label>\n        <ion-icon name="md-calendar" style="margin-right: 5%;"></ion-icon>{{fecha}}\n      </ion-label>\n    </ion-item>\n  \n    <ion-item>\n      <ion-label>\n        <ion-icon name="ios-time-outline" style="margin-right: 3%;"></ion-icon> {{hora}}\n      </ion-label>\n    </ion-item>\n  \n    <ion-item>\n      <div *ngIf="aprobo">\n        <font size=4 style="color: green; margin-left: 6%;">\n          <ion-icon name="checkmark" style="color: green;"></ion-icon> Transaccion Aprobada\n        </font>\n      </div>\n      \n      <div *ngIf="rechazo">\n        <font size=4 style="color: red; margin-left: 5%;">\n          <ion-icon name="close" style="color: red;"></ion-icon> Transaccion Rechazada\n        </font>\n      </div>\n    </ion-item>\n  </div>\n  -->\n\n  <!--Aqui empieza lo nuevo-->\n\n  <!--*ngIf="contentMsj"-->\n  <div >\n    <ion-card>\n        <ion-card-content>\n            <!--empieza-->\n            <table>\n                <tr *ngIf="mostrarDevolver">\n                    <td *ngIf="mostrarDevolver">\n                        <span class="devolver" (click)="devolverse()">\n                            <ion-img src="assets/img/new/BANDEJA_DEVOLVERSE.svg" style="min-width: 31px; min-height: 26px;"></ion-img>\n                        </span>\n                        <span class="otp">\n                            <!--<ion-img src="assets/img/new/BANDEJA_VERIFICACION_ID.svg"></ion-img>-->\n                        </span>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div class="texto">\n                            {{ \'validacionPos.titulo\' | translate }}\n                        </div>\n                    </td>\n                </tr>\n            </table>\n            <!--termina-->\n            <div href="#">\n                <p style="font-size: initial; margin-top: 20px; color: #A0A0A0;">{{ \'pushMensajeTitulo2\' | translate }}</p>\n            </div>\n            <br>\n            <table style="margin-top: -15px;">\n\n              <tr style="border-bottom: 1px solid; border-bottom-color: #A0A0A0;">\n                <td>\n                  <ion-icon name="ios-warning-outline" style="margin-right: 3%; color: #FF3C00; "></ion-icon>\n                </td>\n                <td style="color: #A0A0A0; padding-left: 10px;">\n                  {{titulo}}\n                </td>\n              </tr>\n\n              <tr style="border-bottom: 1px solid; border-bottom-color: #A0A0A0;">\n                <td>\n                  <ion-icon name="ios-mail-outline" style="margin-right: 5%; color: #FF3C00;"></ion-icon>\n                </td>\n                <td style="color: #A0A0A0; padding-left: 10px;">\n                  {{mensaje}}\n                </td>\n              </tr>\n\n              <tr style="border-bottom: 1px solid; border-bottom-color: #A0A0A0;">\n                <td>\n                  <ion-icon name="md-calendar" style="margin-right: 5%; color: #FF3C00;"></ion-icon>\n                </td>\n                <td style="color: #A0A0A0; padding-left: 10px;">\n                  {{fecha}}\n                </td>\n              </tr>\n\n              <tr style="border-bottom: 1px solid; border-bottom-color: #A0A0A0;">\n                <td>\n                  <ion-icon name="ios-time-outline" style="margin-right: 3%; color: #FF3C00;"></ion-icon>\n                </td>\n                <td style="color: #A0A0A0; padding-left: 10px;">\n                  {{hora}}\n                </td>\n              </tr>\n              \n              <tr *ngIf="aprobo">\n                <td>\n                  <ion-icon name="checkmark" style="color: #D2D20A;"></ion-icon>\n                </td>\n                <td style="color: #D2D20A; padding-left: 10px;">\n                  Transaccion Aprobada\n                </td>\n              </tr> \n              <tr *ngIf="rechazo">\n                <td>\n                  <ion-icon name="close" style="color: #FF3C00;"></ion-icon>\n                </td>\n                <td  style="color: #FF3C00;padding-left: 10px;">\n                  Transaccion Rechazada\n                </td>\n              </tr>\n            </table>\n            \n        </ion-card-content>\n    </ion-card>\n</div>\n\n\n\n  \n</ion-content>\n'/*ion-inline-end:"D:\PYT\development\work_HB_2019\auth_2019\authApp\src\pages\push\push.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Platform */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_push___["a" /* Push */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_fingerprint_aio__["a" /* FingerprintAIO */], __WEBPACK_IMPORTED_MODULE_7__providers_http_http__["a" /* HttpProvider */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */], __WEBPACK_IMPORTED_MODULE_4__ionic_storage__["b" /* Storage */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* MenuController */], __WEBPACK_IMPORTED_MODULE_5__providers_utils_utils__["a" /* UtilsProvider */], __WEBPACK_IMPORTED_MODULE_6__ionic_native_device__["a" /* Device */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["g" /* LoadingController */]])
], PushPage);

//# sourceMappingURL=push.js.map

/***/ })

});
//# sourceMappingURL=7.js.map